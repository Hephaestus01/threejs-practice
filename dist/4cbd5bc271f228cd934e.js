import"./style.css";import*as THREE from"three";import{OrbitControls}from"three/examples/jsm/controls/OrbitControls.js";import*as dat from"dat.gui";const textureLoader=new THREE.TextureLoader,normalTexture=textureLoader.load("/textures/NormalMap-2.png"),canvas=document.querySelector("canvas.webgl"),scene=new THREE.Scene,geometry=new THREE.SphereBufferGeometry(.5,64,64),material=new THREE.MeshStandardMaterial;material.metalness=.7,material.roughness=.2,material.normalMap=normalTexture,material.color=new THREE.Color(2697513);const sphere=new THREE.Mesh(geometry,material);scene.add(sphere);const pointLight=new THREE.PointLight(16777215,.01);pointLight.position.x=2,pointLight.position.y=3,pointLight.position.z=4,scene.add(pointLight);const pointLight2=new THREE.PointLight(6947018,2);pointLight2.position.set(-1.6,2.8,3),pointLight2.intensity=1.81,scene.add(pointLight2);const pointLight3=new THREE.PointLight(14075676,2);pointLight3.position.set(3,-2.12,-1.45),pointLight3.intensity=2.36,scene.add(pointLight3);const sizes={width:window.innerWidth,height:window.innerHeight};window.addEventListener("resize",(()=>{sizes.width=window.innerWidth,sizes.height=window.innerHeight,camera.aspect=sizes.width/sizes.height,camera.updateProjectionMatrix(),renderer.setSize(sizes.width,sizes.height),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2))}));const camera=new THREE.PerspectiveCamera(75,sizes.width/sizes.height,.1,100);camera.position.x=0,camera.position.y=0,camera.position.z=2,scene.add(camera);const renderer=new THREE.WebGLRenderer({canvas,alpha:!0});renderer.setSize(sizes.width,sizes.height),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2)),document.addEventListener("mousemove",onMouseMove);let mouseX=0,mouseY=0,targetX=0,targetY=0;function onMouseMove(e){const t=window.innerWidth/50,i=window.innerHeight/50;mouseX=e.clientX-t,mouseY=e.clientY-i}const updateSphere=e=>{sphere.position.y=.001*window.scrollY};window.addEventListener("scroll",updateSphere);const clock=new THREE.Clock,tick=()=>{targetX=.001*mouseX,targetY=.001*mouseY;const e=clock.getElapsedTime();sphere.rotation.y=.2*e,sphere.rotation.y+=1.5*(targetX-sphere.rotation.y),sphere.rotation.x=.5*(targetY-sphere.rotation.x),sphere.position.z=.75*(targetY-sphere.rotation.x),renderer.render(scene,camera),window.requestAnimationFrame(tick)};tick();